api/profile : GET 

# Set your access token here (replace with your actual token)
$accessToken = "8fa62fc47f07c393491a3db49e65ab9477280adb7f5c26cb2fbb71ce107e2051"

# Send GET request to the profile API
$profileResponse = Invoke-WebRequest -Uri "http://localhost/task-api/public/api/profile" `
    -Method GET `
    -Headers @{
        "Authorization" = "Bearer $accessToken"
        "Content-Type" = "application/json"
    }

# Check and display the response
if ($profileResponse.StatusCode -eq 200) {
    $profileData = $profileResponse.Content | ConvertFrom-Json
    Write-Host "Profile Data:"
    Write-Host "ID: $($profileData.id)"
    Write-Host "Username: $($profileData.username)"
    Write-Host "Email: $($profileData.email)"
    Write-Host "Created At: $($profileData.created_at)"
} else {
    Write-Host "Error: Unable to fetch profile. Status Code: $($profileResponse.StatusCode)"
}

Sample o/p : 

Profile Data:
ID: 4
Username: testuser3
Email:
Created At: 2025-04-25 22:59:35

** REGISTER ** 

$response = Invoke-WebRequest -Uri "http://localhost/task-api/public/api/register" `
>>     -Method POST `
>>     -Headers @{"Content-Type" = "application/json"} `                                                                                >>     -Body '{"username": "newuser", "email": "newuser@example.com", "password": "password123"}'                                       >>                                                                                                                                      >> Write-Host $response.Content                                                                                                         
>>

O/P : 

{"id":"6"}

** LOGIN ** 

$response = Invoke-WebRequest -Uri "http://localhost/task-api/public/api/login" `
>>     -Method POST `
>>     -Headers @{"Content-Type" = "application/json"} `
>>     -Body '{"username": "newuser", "password": "password123"}'
>>
>> $json = $response.Content | ConvertFrom-Json
>> $accessToken = $json.access_token
>> Write-Host "Access Token: $accessToken"
>>

O/P: 
Access Token: 64c4e9f409be63a87540d14e14b453817a47cf5a5042374d7a9bbc13fb27bd3d

** GET PROFILE  ** (/api/profile - GET )

$profileResponse = Invoke-WebRequest -Uri "http://localhost/task-api/public/api/profile" `
    -Method GET `
    -Headers @{
        "Authorization" = "Bearer $accessToken"
        "Content-Type" = "application/json"
    }

$profileData = $profileResponse.Content | ConvertFrom-Json
Write-Host "Profile:"
Write-Host "Username: $($profileData.username)"
Write-Host "Email: $($profileData.email)"
Write-Host "Created At: $($profileData.created_at)"

O/P : 
Profile:
Username: newuser
Email: newuser@example.com
Created At: 2025-04-26 18:54:39

** UPDATE PROFILE (/api/profile/update - PUT ) **

$accessToken = "64c4e9f409be63a87540d14e14b453817a47cf5a5042374d7a9bbc13fb27bd3d"

$response = Invoke-WebRequest -Uri "http://localhost/task-api/public/api/profile/update" `
    -Method PUT `
    -Headers @{
        "Authorization" = "Bearer $accessToken"
        "Content-Type" = "application/json"
    } `
    -Body '{"username": "updateduser", "email": "updateduser@example.com"}'

Write-Host $response.Content

O/P : 
{
    "message":"Profile updated successfully"
}

** Forget Password + Reset Token ( /api/api/forgot-password ) **

$response = Invoke-WebRequest -Uri "http://localhost/task-api/public/api/forgot-password" `
>>     -Method POST `
>>     -Headers @{
>>         "Content-Type" = "application/json"
>>     } `
>>     -Body '{"username": "testuser"}'
>>
>> Write-Host $response.Content
>>

o/p : 
{
    "message":"Reset token generated",
    "token":"e746f9538cb92257e9dbbfd4cb02e9cc"
}


** Reset Password (/api/reset-password ) ** 

$response = Invoke-WebRequest -Uri "http://localhost/task-api/public/api/reset-password" `
    -Method POST `
    -Headers @{
        "Content-Type" = "application/json"
    } `
    -Body '{"username": "testuser", "token": "e746f9538cb92257e9dbbfd4cb02e9cc", "new_password": "newpassword123"}'

Write-Host $response.Content

o/p : 
{
    "message":"Password reset successful"
}

